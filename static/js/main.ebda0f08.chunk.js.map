{"version":3,"sources":["World.ts","Canvas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["World","width","rule","table","states","epoch","this","tableForRule","Array","state","fill","push","x","color","rgbNumber","previousState","n","get","canvas","cellSize","window","flip","clear","ctx","getContext","fillStyle","fillRect","height","y","Math","max","length","value","toString","Map","i","set","App","props","world","updateRate","tick","hue","hueStep","React","createRef","match","params","id","parseInt","resize","draw","step","Color","getCanvas","innerHeight","requestAnimationFrame","innerWidth","floor","ref","current","Component","path","exact","component","Drawer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebda0f08.chunk.js","sourcesContent":["import Color from \"color\";\n\nexport default class World {\n  width: number;\n  rule: number;\n  table: Map<number, number>;\n  states: Array<Array<number>>;\n  epoch: number;\n\n  constructor(width: number, rule: number) {\n    this.width = width;\n    this.rule = rule;\n    this.table = World.tableForRule(rule);\n    this.states = new Array<Array<number>>();\n    let state = new Array<number>(this.width);\n    state.fill(0);\n    this.states.push(state);\n    this.epoch = 0;\n  }\n\n  set(x: number, color: Color) {\n    let state = this.states[this.epoch];\n    state[x] = color.rgbNumber();\n  }\n\n  setRule(rule: number) {\n    this.rule = rule;\n    this.table = World.tableForRule(rule);\n  }\n\n  step(color: Color) {\n    let previousState = this.states[this.epoch];\n    let state = new Array<number>(this.width);\n    state.fill(0);\n\n    for (let x = 0; x < this.width; x++) {\n      let l = previousState[(((x - 1) % this.width) + this.width) % this.width] !== 0 ? 1 : 0;\n      let c = previousState[x] !== 0 ? 1 : 0;\n      let r = previousState[(x + 1) % this.width] !== 0 ? 1 : 0;\n\n      let n = l << 2 | c << 1 | r;\n\n      state[x] = this.table.get(n)! ? color.rgbNumber() : 0;\n    }\n\n    this.states.push(state);\n    this.epoch++;\n  }\n\n  resize(width: number) {\n    this.width = width;\n    this.states = new Array<Array<number>>();\n    let states = new Array<number>(this.width);\n    states.fill(0);\n    this.states.push(states);\n    this.epoch = 0;\n  }\n\n  draw(canvas: HTMLCanvasElement, cellSize: number, window: number, flip: boolean, clear: boolean) {\n    let ctx = canvas.getContext(\"2d\")!;\n\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    let y = (canvas.height / 2) / cellSize - 1;\n\n    for (let epoch = this.epoch; epoch >= Math.max(this.epoch - window, 0); epoch--) {\n      let state = this.states[epoch];\n\n      for (let x = 0; x < state.length; x++) {\n        let value = state[x];\n        if (value) {\n          ctx.fillStyle = \"#\" + value.toString(16);\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n        }\n      }\n      y--;\n    }\n\n    y = (canvas.height / 2) / cellSize;\n\n    for (let epoch = this.epoch; epoch >= Math.max(this.epoch - window, 0); epoch--) {\n      let state = this.states[epoch];\n\n      for (let x = 0; x < state.length; x++) {\n        let value = state[x];\n        if (value) {\n          ctx.fillStyle = \"#\" + value.toString(16);\n          ctx.fillRect(x * cellSize, y * cellSize, cellSize, cellSize);\n        }\n      }\n      y++;\n    }\n  }\n\n  private static tableForRule(rule: number): Map<number, number> {\n    let table = new Map<number, number>();\n    for (let i = 0; i < 8; i++) {\n      table.set(i, (rule & (1 << i)) != 0 ? 1 : 0);\n    }\n    return table;\n  }\n}\n","import React, {Component, RefObject} from 'react';\nimport World from \"./World\";\nimport Color from \"color\";\nimport {RouteComponentProps} from \"react-router-dom\";\n\ntype TParams = { id?: string | undefined };\n\nexport default class App extends Component<RouteComponentProps<TParams>, {}> {\n  canvas: React.Ref<HTMLCanvasElement>;\n  cellSize: number;\n  world: World;\n  updateRate: number;\n  tick: number;\n  hue: number;\n  hueStep: number;\n\n  constructor(props: RouteComponentProps<TParams>) {\n    super(props);\n    this.canvas = React.createRef();\n    this.cellSize = 5;\n\n    let rule = 30;\n    if (this.props.match.params.id ) {\n      rule = parseInt(this.props.match.params.id, 10);\n    }\n\n    this.world = new World(1024,  rule);\n    this.updateRate = 5;\n    this.tick = 0;\n    this.hue = 0;\n    this.hueStep = 1;\n  }\n\n  componentDidMount() {\n    this.resize();\n    this.draw();\n  }\n\n  draw() {\n    if (this.tick++ % this.updateRate == 0) {\n      this.world.step(new Color('hsl(' + this.hue + ', 100%, 80%)'));\n\n      let canvas = this.getCanvas();\n      if (canvas) {\n        this.resize();\n        this.world.draw(canvas, this.cellSize, (window.innerHeight/2) / this.cellSize,false, true);\n      }\n\n      this.hue += this.hueStep;\n      this.hue %= 360;\n    }\n\n    requestAnimationFrame(() => this.draw());\n  }\n\n  resize() {\n    let canvas = this.getCanvas();\n    if (canvas) {\n      if (canvas.width !== window.innerWidth || canvas.height !== window.innerHeight) {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        this.world.resize(window.innerWidth / this.cellSize);\n        this.world.set(\n          Math.floor(this.world.width / 2),\n          new Color('hsl(' + this.hue + ', 100%, 80%)')\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas ref={this.canvas}/>\n      </div>\n    )\n  }\n\n  private getCanvas(): HTMLCanvasElement | null {\n    let ref = this.canvas as RefObject<HTMLCanvasElement>;\n    return ref.current;\n  }\n}","import React, {Component} from 'react';\nimport Drawer from \"./Canvas\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default class App extends Component<{ }, { }> {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/\" exact component={Drawer}/>\n            <Route path=\"/:id\" component={Drawer}/>\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}